# Generated by Django 5.0.3 on 2024-08-18 20:26

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('backend_app', '0001_initial'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='coursematerials',
            name='course',
        ),
        migrations.RemoveField(
            model_name='courses',
            name='subject',
        ),
        migrations.RemoveField(
            model_name='courses',
            name='teacher',
        ),
        migrations.RemoveField(
            model_name='tasks',
            name='course',
        ),
        migrations.RemoveField(
            model_name='grades',
            name='course',
        ),
        migrations.RemoveField(
            model_name='grades',
            name='student',
        ),
        migrations.RemoveField(
            model_name='portfolioentries',
            name='portfolio',
        ),
        migrations.RemoveField(
            model_name='subjectofteachers',
            name='subject',
        ),
        migrations.RemoveField(
            model_name='subjectofteachers',
            name='teacher',
        ),
        migrations.RemoveField(
            model_name='taskfiles',
            name='task',
        ),
        migrations.RemoveField(
            model_name='tasksubmissions',
            name='task',
        ),
        migrations.RemoveField(
            model_name='tasksubmissions',
            name='student',
        ),
        migrations.AlterField(
            model_name='myuser',
            name='date_of_birth',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='myuser',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups'),
        ),
        migrations.AlterField(
            model_name='myuser',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
        migrations.AlterField(
            model_name='portfolio',
            name='student',
            field=models.ForeignKey(limit_choices_to={'role': 'Student'}, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='subject',
            name='grade',
            field=models.PositiveIntegerField(),
        ),
        migrations.AlterUniqueTogether(
            name='subject',
            unique_together={('name', 'grade', 'category')},
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('schedule', models.DateTimeField()),
                ('room', models.CharField(max_length=100)),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend_app.subject')),
                ('teacher', models.ForeignKey(limit_choices_to={'role': 'Teacher'}, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Announcement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('content', models.TextField()),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend_app.course')),
            ],
        ),
        migrations.CreateModel(
            name='CourseMaterial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_name', models.CharField(max_length=255)),
                ('s3_bucket_key', models.CharField(max_length=255)),
                ('upload_date', models.DateTimeField(auto_now_add=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend_app.course')),
            ],
        ),
        migrations.CreateModel(
            name='Grade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grade', models.PositiveIntegerField()),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend_app.course')),
                ('student', models.ForeignKey(limit_choices_to={'role': 'Student'}, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('student', 'course')},
            },
        ),
        migrations.CreateModel(
            name='PortfolioEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('file_name', models.CharField(blank=True, max_length=255)),
                ('s3_bucket_key', models.CharField(blank=True, max_length=255)),
                ('upload_date', models.DateTimeField(auto_now_add=True)),
                ('portfolio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend_app.portfolio')),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('deadline', models.DateTimeField()),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend_app.course')),
            ],
        ),
        migrations.CreateModel(
            name='TaskFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_name', models.CharField(max_length=255)),
                ('s3_bucket_key', models.CharField(max_length=255)),
                ('upload_date', models.DateTimeField(auto_now_add=True)),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend_app.task')),
            ],
        ),
        migrations.CreateModel(
            name='TaskSubmission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('submission_date', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Submitted', 'Submitted'), ('Graded', 'Graded')], default='Pending', max_length=10)),
                ('grade', models.PositiveIntegerField(blank=True, null=True)),
                ('comments', models.TextField(blank=True)),
                ('file_name', models.CharField(blank=True, max_length=255)),
                ('s3_bucket_key', models.CharField(blank=True, max_length=255)),
                ('student', models.ForeignKey(limit_choices_to={'role': 'Student'}, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend_app.task')),
            ],
            options={
                'unique_together': {('task', 'student')},
            },
        ),
        migrations.DeleteModel(
            name='Announcements',
        ),
        migrations.DeleteModel(
            name='CourseMaterials',
        ),
        migrations.DeleteModel(
            name='Courses',
        ),
        migrations.DeleteModel(
            name='Grades',
        ),
        migrations.DeleteModel(
            name='PortfolioEntries',
        ),
        migrations.DeleteModel(
            name='SubjectOfTeachers',
        ),
        migrations.DeleteModel(
            name='TaskFiles',
        ),
        migrations.DeleteModel(
            name='Tasks',
        ),
        migrations.DeleteModel(
            name='TaskSubmissions',
        ),
    ]
